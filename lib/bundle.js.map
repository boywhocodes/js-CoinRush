{"version":3,"sources":["webpack:///webpack/bootstrap 5691ee58957a94e13b2f","webpack:///./lib/coin_rush.js","webpack:///./lib/game.js","webpack:///./lib/coin.js","webpack:///./lib/util.js","webpack:///./lib/moving_object.js","webpack:///./lib/mario.js","webpack:///./lib/game_view.js","webpack:///./lib/lakitu.js","webpack:///./lib/poison_mushroom.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACXD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA,oBAAmB,oBAAoB;AACvC;AACA;AACA,SAAQ;AACR;AACA;;AAEA;AACA;AACA,oBAAmB,aAAa;AAChC;AACA;AACA,SAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,uBAAuB;AAC1C,sBAAqB,uBAAuB;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;ACzCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACzDA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,wBAAuB,sBAAsB,EAAE;AAC/C,SAAQ;AACR;AACA,4BAA2B,cAAc,EAAE;AAC3C;;AAEA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA,sCAAqC,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;ACnOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5691ee58957a94e13b2f\n **/","const Game = require(\"./game\");\nconst GameView = require(\"./game_view\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.width = Game.DIM_X;\n  canvasEl.height = Game.DIM_Y;\n  const ctx = canvasEl.getContext(\"2d\");\n  const game = new Game();\n  let gameView = new GameView(game, ctx);\n  gameView.start();\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/coin_rush.js\n ** module id = 0\n ** module chunks = 0\n **/","const Coin = require(\"./coin\");\nconst Mario = require(\"./mario\");\nconst Util = require(\"./util\");\nconst Lakitu = require(\"./lakitu\");\nconst PoisonMushroom = require(\"./poison_mushroom\");\n\nclass Game {\n  constructor() {\n    this.reset();\n  }\n\n  reset() {\n    this.coins = [];\n    this.marios = [];\n    this.lakitus = [];\n    this.pMushrooms = [];\n    this.remainTime = 30;\n  }\n\n  add(object) {\n    if (object instanceof Coin) {\n      this.coins.push(object);\n    } else if (object instanceof Mario) {\n      this.marios.push(object);\n    } else if (object instanceof Lakitu) {\n      this.lakitus.push(object);\n    } else if (object instanceof PoisonMushroom) {\n      this.pMushrooms.push(object);\n    } else {\n      throw \"wtf?\";\n    }\n  }\n\n  addCoins() {\n    for (let i = 0; i < Game.NUM_COINS; i++) {\n      this.add(new Coin({\n        game: this,\n       }));\n    }\n  }\n\n  addPMushroom() {\n    let pmCount = Math.floor(Game.NUM_PMUSHROOMS * Math.random());\n    for (let i = 0; i < pmCount; i++) {\n      this.add(new PoisonMushroom({\n        game: this,\n       }));\n    }\n  }\n\n  addMario() {\n    const mario = new Mario({\n      pos: [400,450],\n      game: this\n    });\n    this.add(mario);\n    return mario;\n  }\n\n  addLakitu() {\n    const lakitu = new Lakitu({\n      pos: [600,40],\n      game: this\n    });\n    this.add(lakitu);\n    return lakitu;\n  }\n\n  allObjects() {\n    return [].concat(this.marios, this.coins, this.lakitus, this.pMushrooms);\n  }\n\n  checkCollisions() {\n    const allObjects = this.allObjects();\n    for (let i = 0; i < allObjects.length; i++) {\n      for (let j = 0; j < allObjects.length; j++) {\n        const obj1 = allObjects[i];\n        const obj2 = allObjects[j];\n\n        if (obj1.isCollidedWith(obj2)) {\n          const collision = obj1.collideWith(obj2);\n          if (collision) return;\n        }\n      }\n    }\n  }\n\n  draw(ctx, gameLeftTime) {\n    ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n    let bg = new Image();\n    bg.src = 'sprites/bg.png';\n    ctx.drawImage(bg, 0, 0);\n    let coinImg = new Image();\n    coinImg.src = 'sprites/coin.png';\n    ctx.drawImage(coinImg, Game.DIM_X - 150, 15);\n    ctx.font=\"30px Sans-serif\";\n    ctx.fillText(' x ' + this.marios[0].coins,Game.DIM_X - 100, 50);\n    this.remainTime = Math.round((gameLeftTime) * 100) / 100;\n    if (this.remainTime < 0.01) {\n      this.remainTime = 0;\n    }\n    ctx.fillText(' Time: ' + this.remainTime, 10, 50);\n\n    this.allObjects().forEach((object) => {\n      object.draw(ctx, object.img);\n    });\n  }\n\n  isOutOfBounds(pos) {\n    return (pos[0] < 0) || (pos[1] < 0) ||\n      (pos[0] > Game.DIM_X) || (pos[1] > Game.DIM_Y);\n  }\n\n  handleInput() {\n    if (!this.marios[0].bumped) {\n      if (input.isDown('LEFT')) {\n        this.marios[0].run(Game.MOVES['left'][0]);\n        this.marios[0].facingRight = false;\n      } else if (input.isDown('RIGHT')) {\n        this.marios[0].run(Game.MOVES['right'][0]);\n        this.marios[0].facingRight = true;\n      } else {\n        this.marios[0].noRun();\n      }\n      if (input.isDown('SPACE')) {\n        this.marios[0].jump();\n      } else {\n        this.marios[0].noJump();\n      }\n    }\n\n  }\n\n  moveObjects(delta) {\n    this.allObjects().forEach((object) => {\n      object.move(delta);\n    });\n    this.marios.forEach(mario => {\n      mario.checkBumped(delta);\n    });\n    this.coins.forEach((coin) => {\n      coin.checkOnTheGround(delta);\n    });\n    this.pMushrooms.forEach((pm) => {\n      pm.checkOnTheGround(delta);\n    });\n  }\n\n  randomPosition() {\n    return [\n      Game.DIM_X * Math.random(),\n      Game.DIM_Y * Math.random()\n    ];\n  }\n\n  remove(object) {\n    if (object instanceof Coin) {\n      this.coins.splice(this.coins.indexOf(object), 1);\n    } else if (object instanceof Mario) {\n      this.marios.splice(this.marios.indexOf(object), 1);\n    } else if (object instanceof PoisonMushroom) {\n      this.pMushrooms.splice(this.pMushrooms.indexOf(object), 1);\n    } else {\n      throw \"wtf?\";\n    }\n  }\n\n  step(delta) {\n    this.handleInput();\n    this.moveObjects(delta);\n    this.checkCollisions();\n  }\n\n  wrap(pos) {\n    return [\n      Util.wrap(pos[0], Game.DIM_X), Util.wrap(pos[1], Game.DIM_Y)\n    ];\n  }\n}\n\nGame.BG_COLOR = \"#000000\";\nGame.DIM_X = 1000;\nGame.DIM_Y = 700;\nGame.FPS = 32;\nGame.NUM_COINS = 25;\nGame.NUM_PMUSHROOMS = 2;\nGame.MOVES = {\n  \"left\": [-6,  0],\n  \"right\": [ 6,  0],\n};\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 1\n ** module chunks = 0\n **/","const Util = require(\"./util\");\nconst MovingObject = require(\"./moving_object\");\nconst Mario = require('./mario');\nconst DEFAULTS = {\n\tCOLOR: \"#505050\",\n\tRADIUS: 20,\n\tSPEED: 6\n};\n\nclass Coin extends MovingObject {\n    constructor(options = {}) {\n\t\t\toptions.img = new Image();\n\t    options.img.src = 'sprites/coin.png';\n      options.color = DEFAULTS.COLOR;\n      options.pos = options.pos || options.game.lakitus[0].pos;\n      options.radius = DEFAULTS.RADIUS;\n      options.vel = options.vel || Util.randomVec(DEFAULTS.SPEED);\n\t\t\tsuper(options);\n\t\t\tthis.index =  Math.floor(Math.random() * 10);\n\t\t\tthis.isWrappable = false;\n\t\t\tthis.startTime = 0;\n\t\t\tthis.emptyCoin = new Image();\n\t\t\tthis.emptyCoin.src = 'sprites/coin_empty.png';\n\t\t\tthis.coinAud = new Audio('sounds/coin.wav');\n    }\n\n    collideWith(otherObject) {\n      if (otherObject instanceof Mario && !otherObject.bumped) {\n\t\t\t\totherObject.coins += 1;\n\t\t\t\tthis.coinAud.play();\n        this.remove();\n        return true;\n      }\n    }\n\n\t\tcheckOnTheGround(delta) {\n\t\t\tif (this.pos[1] >= 550) {\n\t\t\t\tthis.vel = [0, 0];\n\t\t\t\tthis.startTime += delta;\n\t\t\t}\n\t\t\tlet check = Math.floor((this.startTime) % 10);\n\t\t\tif (this.startTime > 10 && (check === 7 || check === 8 || check === 9)) {\n\t\t\t\tthis.img = this.emptyCoin;\n\t\t\t}\n\t\t\tif (this.startTime > 2000) {\n\t\t\t\tthis.remove();\n\t\t\t}\n\t\t\t// console.log(this.startTime);\n\t\t}\n}\n\nmodule.exports = Coin;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/coin.js\n ** module id = 2\n ** module chunks = 0\n **/","const Util = {\n  // Normalize the length of the vector to 1, maintaining direction.\n  dir (vec) {\n    var norm = Util.norm(vec);\n    return Util.scale(vec, 1 / norm);\n  },\n  // Find distance between two points.\n  dist (pos1, pos2) {\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  },\n  // Find the length of the vector.\n  norm (vec) {\n    return Util.dist([0, 0], vec);\n  },\n  // Return a randomly oriented vector with the given length.\n  randomVec (length) {\n    var deg = 2 * Math.PI * Math.random();\n    return Util.scale([Math.sin(deg), Math.cos(deg)], length);\n  },\n  // Scale the length of a vector by the given amount.\n  scale (vec, m) {\n    let yV = Math.abs(vec[1] * m);\n    if (yV < 3) {\n      yV += 3;\n    }\n    return [vec[0] * m, yV];\n  },\n\n  wrap (coord, max) {\n    if (coord < 0) {\n      return max - (coord % max);\n    } else if (coord > max) {\n      return coord % max;\n    } else {\n      return coord;\n    }\n  }\n};\n\nmodule.exports = Util;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/util.js\n ** module id = 3\n ** module chunks = 0\n **/","const Util = require(\"./util\");\n\nclass MovingObject {\n  constructor(options) {\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.radius = options.radius;\n    this.color = options.color;\n    this.game = options.game;\n    this.img = options.img;\n    this.width = options.width;\n    this.height = options.height;\n    this.isWrappable = true;\n  }\n\n  collideWith(otherObject) {\n    // default do nothing\n  }\n\n  draw(ctx, img) {\n    ctx.drawImage(img,this.pos[0],this.pos[1]);\n  }\n\n  isCollidedWith(otherObject) {\n    let newPos = [this.pos[0] + this.radius, this.pos[1] + this.radius];\n    let otherPos = [otherObject.pos[0] + otherObject.radius, otherObject.pos[1] + otherObject.radius];\n    const centerDist = Util.dist(newPos, otherPos);\n    return centerDist < (this.radius + otherObject.radius);\n  }\n\n  move(timeDelta) {\n    //timeDelta is number of milliseconds since last move\n    //if the computer is busy the time delta will be larger\n    //in this case the MovingObject should move farther in this frame\n    //velocity of object is how far it should move in 1/60th of a second\n    const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA,\n        offsetX = this.vel[0] * velocityScale,\n        offsetY = this.vel[1] * velocityScale;\n\n    this.pos = [this.pos[0] + offsetX, this.pos[1] + offsetY];\n\n    if (this.game.isOutOfBounds(this.pos)) {\n      if (this.isWrappable) {\n        this.pos = this.game.wrap(this.pos);\n      } else {\n        this.vel[0] = -this.vel[0];\n      }\n    }\n  }\n\n  remove() {\n    this.game.remove(this);\n  }\n}\n\nconst NORMAL_FRAME_TIME_DELTA = 1000/60;\n\nmodule.exports = MovingObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/moving_object.js\n ** module id = 4\n ** module chunks = 0\n **/","const MovingObject = require(\"./moving_object\");\nconst Coin = require('./coin');\nconst Util = require(\"./util\");\n\nfunction randomColor() {\n  const hexDigits = \"0123456789ABCDEF\";\n\n  let color = \"#\";\n  for (let i = 0; i < 3; i ++) {\n    color += hexDigits[Math.floor((Math.random() * 16))];\n  }\n\n  return color;\n}\n\nclass Mario extends MovingObject {\n  constructor(options) {\n    options.img = new Image();\n    options.img.src = 'sprites/marior1.png';\n    options.radius = Mario.RADIUS;\n    options.vel = options.vel || [0, 0];\n    options.color = options.color || randomColor();\n    super(options);\n    this.coins = 0;\n    this.jumping = false;\n    this.facingRight = true;\n    this.bumped = false;\n    this.jumpAud = new Audio('sounds/jump-small.wav');\n  }\n\n  run(vel) {\n    this.vel[0] = vel;\n  }\n\n  noRun() {\n    if (this.vel[0] > 0) {\n      this.vel[0] -= 2;\n    } else if (this.vel[0] < 0) {\n      this.vel[0] += 2;\n    }\n  }\n  checkBumped() {\n    if (this.bumped) {\n      this.jumping = false;\n      this.vel[0] = 0;\n      if (this.pos[1] <= 280) {\n        this.vel[1] += 15;\n      } else if (this.pos[1] >= 450) {\n        this.vel[1] = 0;\n        this.pos[1] = 450;\n      }\n    }\n  }\n\n  jump() {\n    if (this.pos[1] === 450 && this.jumping === false && this.bumped === false) {\n      this.jumpAud.play();\n      this.vel[1] = -15;\n      this.jumping = true;\n    } else if (this.pos[1] <= 280) {\n      this.vel[1] += 15;\n    } else if (this.pos[1] >= 450) {\n      this.vel[1] = 0;\n      this.pos[1] = 450;\n    }\n  }\n\n  noJump() {\n    if(this.jumping === true) {\n        this.vel[1] = 15;\n        this.jumping = false;\n    } else if (this.pos[1] >= 450) {\n      this.vel[1] = 0;\n      this.pos[1] = 450;\n      this.jumping = false;\n    }\n  }\n\n  relocate() {\n    this.pos = [450,400];\n    this.vel = [0, 0];\n  }\n}\n\nMario.RADIUS = 65;\nmodule.exports = Mario;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/mario.js\n ** module id = 5\n ** module chunks = 0\n **/","class GameView {\n  constructor(game, ctx) {\n    this.ctx = ctx;\n    this.game = game;\n    this.addTimeAud = new Audio('sounds/one-up.wav');\n    this.reset();\n  }\n\n  reset() {\n    this.game.reset();\n    this.time = 20;\n    this.paused = true;\n    this.mario = this.game.addMario();\n    this.lakitu = this.game.addLakitu();\n    this.wakeUpTime = 0;\n    this.gameLeftTime = 30;\n    this.addTimeIdx = 0;\n  }\n\n  bindKeyHandlers() {\n    const mario = this.mario;\n    $('#start').click(() => {\n      this.paused = false;\n      $('#start-bg').hide();\n      $('#start').hide();\n      $('#game-canvas').show();\n    });\n    $('#restart').click(() => {\n      this.reset();\n      $('#start-bg').show();\n      $('#start').show();\n      $('#pause').hide();\n      $('#restart').hide();\n      $('#game-canvas').hide();\n    });\n    $('html').keydown(event => {\n      if ( event.which == 80 ) {\n       this.paused = !this.paused;\n       if (this.paused) {\n         $('#pause').show();\n         $('#restart').show();\n       } else {\n         $('#pause').hide();\n         $('#restart').hide();\n       }\n      }\n    });\n    // Object.keys(GameView.MOVES).forEach((k) => {\n    //   let move = GameView.MOVES[k];\n    //   key(k, () => { mario.power(move[0]); });\n    // });\n    //\n    // key(\"space\", () => { mario.jump(); });\n  }\n\n  // togglePause() {\n  //   if (!this.pause){\n  //     clearInterval(this.timer);\n  //     this.pause = true;\n  //   } else {\n  //     this.timer = setInterval(requestAnimationFrame, this.time);\n  //     this.pause = false;\n  //   }\n  // }\n\n  start() {\n    this.bindKeyHandlers();\n    this.lastTime = 0;\n    //start the animation\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  animate(time) {\n    let timeDelta = time - this.lastTime;\n    if (!this.paused) {\n      this.marioAnime(time);\n      this.lakituAnime(time);\n      this.coinAnime(time);\n      this.createCoins(time);\n      this.wakeUpMario(timeDelta);\n      this.calculateGameEndTime(timeDelta);\n      this.game.step(timeDelta);\n      this.game.draw(this.ctx, this.gameLeftTime);\n    }\n    this.lastTime = time;\n\n    //every call to animate requests causes another call to animate\n    // console.log(time);\n    if (this.gameLeftTime > 0) {\n      requestAnimationFrame(this.animate.bind(this));\n    } else {\n      // this.gameOver();\n      console.log('game over');\n      $('#game-over').show();\n    }\n  }\n  gameOver() {\n    alert(this.mario.coins);\n  }\n\n  calculateGameEndTime(timeDelta) {\n\n    this.gameLeftTime = ((this.gameLeftTime * 1000 - timeDelta) / 1000);\n    if (Math.floor(this.mario.coins / 100) > this.addTimeIdx) {\n      this.addTimeAud.play();\n      this.gameLeftTime += 5;\n      this.addTimeIdx += 1;\n    }\n  }\n  wakeUpMario(timeDelta) {\n    // console.log(this.wakeUpTime);\n    if (this.mario.bumped) {\n      this.wakeUpTime += timeDelta;\n    }\n    if (this.wakeUpTime > 3000) {\n      this.mario.bumped = false;\n      this.wakeUpTime = 0;\n    }\n  }\n  marioAnime(time) {\n    this.marioL1 = new Image();\n    this.marioL1.src = 'sprites/mariol1.png';\n    this.marioL2 = new Image();\n    this.marioL2.src = 'sprites/mariol2.png';\n    this.marioL3 = new Image();\n    this.marioL3.src = 'sprites/mariol3.png';\n    this.marioR1 = new Image();\n    this.marioR1.src = 'sprites/marior1.png';\n    this.marioR2 = new Image();\n    this.marioR2.src = 'sprites/marior2.png';\n    this.marioR3 = new Image();\n    this.marioR3.src = 'sprites/marior3.png';\n    this.marioRj = new Image();\n    this.marioRj.src = 'sprites/mariorj.png';\n    this.marioLj = new Image();\n    this.marioLj.src = 'sprites/mariolj.png';\n\n    if (this.mario.bumped) {\n      if (this.mario.facingRight) {\n        this.mario.img = this.marioR3;\n      } else {\n        this.mario.img = this.marioL3;\n      }\n    } else {\n      if (this.mario.vel[0] === 0) {\n        if (this.mario.facingRight) {\n          this.mario.img = this.marioR1;\n        } else {\n          this.mario.img = this.marioL1;\n        }\n      } else if (((time / 50) % 2) < 1) {\n        if (this.mario.facingRight) {\n          this.mario.img = this.marioR1;\n        } else {\n          this.mario.img = this.marioL1;\n        }\n      } else {\n        if (this.mario.facingRight) {\n          this.mario.img = this.marioR2;\n        } else {\n          this.mario.img = this.marioL2;\n        }\n      }\n      if (this.mario.jumping && this.mario.facingRight) {\n        this.mario.img = this.marioRj;\n      } else if (this.mario.jumping && this.mario.facingRight === false) {\n        this.mario.img = this.marioLj;\n      }\n    }\n  }\n\n  lakituAnime(time) {\n    this.lakituL = new Image();\n    this.lakituL.src = 'sprites/lakitul.png';\n    this.lakituR = new Image();\n    this.lakituR.src = 'sprites/lakitur.png';\n    let newVel = 2 * Math.random();\n    if (this.lakitu.pos[0] < 60 || this.lakitu.pos[0] > 900) {\n      this.lakitu.vel[0] = -this.lakitu.vel[0];\n    }\n    if (((time / 300) % 2) < 1) {\n      this.lakitu.vel[0] -= newVel;\n      if (this.lakitu.vel[0] > 15) {\n        this.lakitu.vel[0] -= newVel;\n      } else if (this.lakitu.vel[0] < -15) {\n        this.lakitu.vel[0] += newVel;\n      }\n    } else {\n      this.lakitu.vel[0] += newVel;\n      if (this.lakitu.vel[0] > 15) {\n        this.lakitu.vel[0] -= newVel;\n      } else if (this.lakitu.vel[0] < -15) {\n        this.lakitu.vel[0] += newVel;\n      }\n    }\n\n    if (this.lakitu.vel[0] < -2) {\n      this.lakitu.img = this.lakituL;\n    } else if (this.lakitu.vel[0] > 2) {\n      this.lakitu.img = this.lakituR;\n    }\n  }\n\n  coinAnime(time) {\n    let coins = this.game.coins;\n    let images = [];\n    for (var i = 1; i <= 10; i++) {\n      let coinImage = new Image();\n      coinImage.src = `sprites/coin${i}.png`;\n      images.push(coinImage);\n    }\n    coins.forEach(coin => {\n      let newIdx = Math.floor((time / 100) % 10);\n      coin.img = images[(coin.index + newIdx) % 10];\n    });\n  }\n\n  createCoins(time) {\n    // console.log(Math.floor((time / 10) % 100));\n    if (Math.floor((time / 10) % 100) === 25) {\n      this.game.addCoins();\n      this.game.addPMushroom();\n    }\n  }\n}\n\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game_view.js\n ** module id = 6\n ** module chunks = 0\n **/","const MovingObject = require(\"./moving_object\");\n\nclass Lakitu extends MovingObject {\n  constructor(options) {\n    options.radius = Lakitu.RADIUS;\n    options.img = new Image();\n    options.img.src = 'sprites/lakitul.png';\n    options.vel = options.vel || [-1, 0];\n    super(options);\n    this.isWrappable = false;\n  }\n}\n\nLakitu.RADIUS = 40;\nLakitu.SPEED = 10;\n\nmodule.exports = Lakitu;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/lakitu.js\n ** module id = 8\n ** module chunks = 0\n **/","const Util = require(\"./util\");\nconst MovingObject = require(\"./moving_object\");\nconst Mario = require('./mario');\nconst DEFAULTS = {\n\tCOLOR: \"#505050\",\n\tRADIUS: 25,\n\tSPEED: 7\n};\n\nclass PoisonMushroom extends MovingObject {\n    constructor(options = {}) {\n\t\t\toptions.img = new Image();\n\t    options.img.src = 'sprites/pmushroom.png';\n      options.pos = options.pos || options.game.lakitus[0].pos;\n      options.radius = DEFAULTS.RADIUS;\n      options.vel = options.vel || Util.randomVec(DEFAULTS.SPEED);\n\t\t\tsuper(options);\n\t\t\tthis.index =  Math.floor(Math.random() * 10);\n\t\t\tthis.isWrappable = false;\n\t\t\tthis.startTime = 0;\n\t\t\tthis.emptyCoin = new Image();\n\t\t\tthis.emptyCoin.src = 'sprites/coin_empty.png';\n\t\t\tthis.bumpAud = new Audio('sounds/bump.wav');\n    }\n\n    collideWith(otherObject) {\n      if (otherObject instanceof Mario && !otherObject.bumped) {\n        this.remove();\n\t\t\t\totherObject.bumped = true;\n\t\t\t\tthis.bumpAud.play();\n        return true;\n      }\n    }\n\n\t\tcheckOnTheGround(delta) {\n\t\t\tif (this.pos[1] >= 550) {\n\t\t\t\tthis.vel = [0, 0];\n\t\t\t\tthis.startTime += delta;\n\t\t\t}\n\t\t\tlet check = Math.floor((this.startTime) % 10);\n\t\t\tif (this.startTime > 1000) {\n\t\t\t\tthis.remove();\n\t\t\t}\n\t\t\t// console.log(this.startTime);\n\t\t}\n}\n\nmodule.exports = PoisonMushroom;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/poison_mushroom.js\n ** module id = 9\n ** module chunks = 0\n **/"],"sourceRoot":""}